<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace表示命名空间 -->
<mapper namespace="cn.a7e7.po.Customer">


	<!--根据客户编号获取客户信息 -->
	<select id="findCustomerById" parameterType="Integer"
		resultType="cn.a7e7.po.Customer">
		<!-- #{id}相当于？ -->
		select * from t_customer where id = #{id}
	</select>

	<!--根据客户名称模糊查询客户信息 -->
	<select id="findCustomerByName" parameterType="String"
		resultType="cn.a7e7.po.Customer">
		<!--后面那个‘value’只要前面的那个是‘String’这个地方就写value -->
		<!--防止sql注入问题不用${value} 这种形式，用#{id}形式可以做到,concat进行字符串拼接。 -->
		<!-- select * from t_customer where username like '%${value}%' -->
		select * from t_customer where username like concat('%',#{username},'%')
	</select>
	
	<!--添加客户信息-->
	<insert id="addCustomer" parameterType="cn.a7e7.po.Customer">
		insert into t_customer(username,jobs,phone) values(#{username},#{jobs},#{phone})
	</insert>
	
	<!--更新客户信息-->
	<update id="updateCustomer" parameterType="cn.a7e7.po.Custome">
		update t_customer set username=#{username} ,jobs=#{jobs},phone#{phone} where id=#{id}
	</update>
</mapper>