<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!--1配置数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!--配置数据库驱动 -->
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver"></property>
		<!--连接数据的url -->
		<property name="url"
			value="jdbc:mysql://localhost:3306/spring"></property>
		<!--连接数据库的用户名 -->
		<property name="username" value="root"></property>
		<!--连接数据库的密码 -->
		<property name="password" value="paolongzhuge20"></property>
	</bean>
	<!--2配置JDBC模板 -->
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<!--默认必须使用数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!--定义id 为accountDao的Bean -->
	<bean id="accountDao" class="cn.a7e7.jdbc.AccountDaoImpl">
		<!--将jdbcTemplate注入到account实例中 -->
		<property name="jdbcTemplate" ref="jdbcTemplate"></property>
	</bean>

	<!--4,事务管理器，依赖于数据源 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!--5,编写通知：对事务进行增强（通知），需要编写切入点和具体事务细节-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
			<!--name:* 表示任意方法名称-->
			<tx:method name ="*" propagation="REQUIRED" isolation="DEFAULT" read-only="false" />
			</tx:attributes>
	</tx:advice>
	
	<!--6，编写aop让Spring自动对目标生成代理，需要使用Aspectj的表达式-->
	<aop:config>
	<!--切入点-->
	<aop:pointcut expression="execution(* cn.a7e7.jdbc.*.*(..))" id="txPointCut"/>
	<!--切面：将切入点和通知整合-->
	<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
	</aop:config>







</beans>